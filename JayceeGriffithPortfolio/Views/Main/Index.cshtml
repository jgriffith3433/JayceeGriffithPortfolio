@inject Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerenderer prerenderer
@using Newtonsoft.Json
@model JayceeGriffithPortfolio.Models.NodeSession
@{
    Layout = null;

    var prerenderResult = await prerenderer.RenderToString("ClientApp/dist/main-server", customDataParameter: Model);
    var publicSessionJson = prerenderResult?.Globals?["nodeSession"]["public"]?.ToString();
    var initialReduxStateJson = prerenderResult?.Globals?["initialReduxState"]?.ToString();
    var completedTasksJson = prerenderResult?.Globals?["completedTasks"]?.ToString();
    var helmetStringsPrerender = prerenderResult?.Globals?["helmetStrings"]?.ToString();
}

<html>
<head>
    <meta charset="utf-8" />
    @Html.Raw(helmetStringsPrerender)
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />

    <link rel="stylesheet" href="~/dist/vendor.css" asp-append-version="true" />

    @if (!AppSettings.Default.IsDevelopment)
    {
        <link rel="stylesheet" href="~/dist/site.css" asp-append-version="true" />
    }
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">
    <script>
        window.publicSession = @Html.Raw(string.IsNullOrEmpty(publicSessionJson) ? "null" : publicSessionJson);
        window.initialReduxState = @Html.Raw(initialReduxStateJson);
        window.completedTasks = @Html.Raw(completedTasksJson);
    </script>
</head>
<body>
    <div id="preloader">
        <div>
            <div class="mobile-only-content" style="font-size:8px">*Note: not supported on mobile safari</div>
            <div style=" position: absolute; display: inline-block; top: 20%; bottom: 20%; right: 20%; left: 20%; text-align: center;">
                <div style="display: inline-block; height: 75%; vertical-align: middle;"></div>
                <div style="position: relative; color: #FFFFFF; display: inline-block; vertical-align: middle;">
                    <div id="excerpt"></div>
                </div>
            </div>
            <br />
            <img src="JayceeGriffithWebsiteGame/loading.gif" />
        </div>
    </div>
    <script>
        try {
            if (typeof WebAssembly === "object" && typeof WebAssembly.instantiate === "function") {
                const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));
                if (module instanceof WebAssembly.Module) {
                    var inst = new WebAssembly.Instance(module) instanceof WebAssembly.Instance;
                    window.supported = true;
                } else {
                    window.supported = false;
                }
            }
        } catch (e) {
            window.supported = false;
        }
        if (!window.supported) {
            var preloader = document.getElementById("preloader");
            preloader.classList.add('hidden');
        }
        var currentEx = -1;
        /*var excerpts = [
            "C#",
            "JavaScript",
            "HTML5",
            "REST",
            "Visual Studio",
            "SQL",
            "MS SQL Server",
            "C++",
            "IIS",
            "Unity3D",
            "3DS Max",
            "MVC ASP.NET",
            "React",
            "Angular",
            "NodeJS",
            "Ninject",
            "jQuery",
            ".NET",
            "Active Directory",
            "Azure Services",
            "Entity Framework",
            "Adobe suite"
        ];*/
        var excerpts = [
            "I'm loading the website for you...",
            "WebGL and WebAssembly are still early web technologies...",
            "It might take a minute...",
            "It is CPU and GPU intensive, requires a bit of RAM...",
            "So it looks best on PC...",
            "But I made it still work on mobile...",
            "But not safari, sorry ios...",
            "Still loading...",
            "And loading...",
            "And still loading...",
            "Just a little longer..."
        ];
        var waitTime = 4000;
        var showNextLoadingExcerpt = function () {
            var preloader = document.getElementById("preloader");
            if (preloader) {
                currentEx++;
                if (currentEx > excerpts.length - 1) {
                    currentEx = 0;
                }
                if ((' ' + preloader.className + ' ').indexOf(' hidden ') <= -1) {
                    var excerpt = document.getElementById("excerpt");
                    if (excerpt) {
                        excerpt.innerHTML = excerpts[currentEx];
                        setTimeout(showNextLoadingExcerpt, waitTime);
                    }
                }
            }
            else {
                setTimeout(showNextLoadingExcerpt, 50);
            }
        }
        setTimeout(showNextLoadingExcerpt, 200);
    </script>

    @* Save the request token in a div. CORS needs to make sure this token can't be read by javascript from other sources than ours *@
    <div id="xsrf-token" data-xsrf-token="@ViewBag.AntiForgeryRequestToken"></div>
    <div id="access-token" data-access-token="@ViewBag.accessToken"></div>

    <div id="react-app">@Html.Raw(prerenderResult?.Html)</div>


    <script src="~/dist/vendor.js" asp-append-version="true"></script>
    <script src="~/dist/main-client.js" asp-append-version="true"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js" integrity="sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous"></script>
</body>
</html>